% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checklist_external_functions.R
\name{cl_set}
\alias{cl_set}
\title{Change Elements of a Checklist}
\usage{
cl_set(cl, ...)
}
\arguments{
\item{cl}{A checklist object}

\item{...}{Elements of checklist to update. See Details for available
options. Unknown arguments will throw warnings, but recognized
arguments in the same call will still be processed.}
}
\description{
This function allows you to cutsomize a checklist you've
created.
}
\details{
Currently supported values that can be changed:
\itemize{
\item{title: }{New title for checklist}
\item{tasks: }{New items for checklist. Overwrites any existing items. Must have consistent length with completed when updating.}
\item{completed: }{New completed statuses for checklist. Overwrites any existing statuses. Must have consistent length with tasks when updating.}
\item{sound: }{Logical for whether or not to make noise upon completion}
\item{background.color: }{String with color value}
\item{text.color: }{String with color value}
\item{completed.color: }{String with color value}
\item{font.family: }{String with font family (basic HTML only)}
}
title
tasks
completed
sound
background.color
text.color
completed.color
font.family:
}
\examples{
# create a checlist
cl <- cl_create()

# change some style options
cl_set(cl, background.color = "blue", text.color = "white")

# add mutliple items (make sure to also update completed)
cl_set(cl, tasks = c(1,2,3), completed = c(TRUE, FALSE, FALSE))

# change items (notice that the tasks argument overwrites
# all items that are currently on the checklist)
cl_set(cl, tasks = c("item 1", "item 2"), completed = rep(FALSE, 2))

}
